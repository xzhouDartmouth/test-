{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/xiaozhou/Documents/workspace/projects/ResearchComputing/Meteor_test/simple-todos/packages/webapp/webapp_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/webapp/webapp_server.js","filename":"/Users/xiaozhou/Documents/workspace/projects/ResearchComputing/Meteor_test/simple-todos/packages/webapp/webapp_server.js","passPerPreset":false,"envName":"development","cwd":"/Users/xiaozhou/Documents/workspace/projects/ResearchComputing/Meteor_test/simple-todos","root":"/Users/xiaozhou/Documents/workspace/projects/ResearchComputing/Meteor_test/simple-todos","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/xiaozhou/Documents/workspace/projects/ResearchComputing/Meteor_test/simple-todos/packages/webapp/webapp_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/webapp_server.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nconst module1 = module;\nmodule1.export({\n  WebApp: () => WebApp,\n  WebAppInternals: () => WebAppInternals\n});\nlet assert;\nmodule1.link(\"assert\", {\n  default(v) {\n    assert = v;\n  }\n\n}, 0);\nlet readFileSync;\nmodule1.link(\"fs\", {\n  readFileSync(v) {\n    readFileSync = v;\n  }\n\n}, 1);\nlet createServer;\nmodule1.link(\"http\", {\n  createServer(v) {\n    createServer = v;\n  }\n\n}, 2);\nlet pathJoin, pathDirname;\nmodule1.link(\"path\", {\n  join(v) {\n    pathJoin = v;\n  },\n\n  dirname(v) {\n    pathDirname = v;\n  }\n\n}, 3);\nlet parseUrl;\nmodule1.link(\"url\", {\n  parse(v) {\n    parseUrl = v;\n  }\n\n}, 4);\nlet createHash;\nmodule1.link(\"crypto\", {\n  createHash(v) {\n    createHash = v;\n  }\n\n}, 5);\nlet connect;\nmodule1.link(\"./connect.js\", {\n  connect(v) {\n    connect = v;\n  }\n\n}, 6);\nlet compress;\nmodule1.link(\"compression\", {\n  default(v) {\n    compress = v;\n  }\n\n}, 7);\nlet cookieParser;\nmodule1.link(\"cookie-parser\", {\n  default(v) {\n    cookieParser = v;\n  }\n\n}, 8);\nlet query;\nmodule1.link(\"qs-middleware\", {\n  default(v) {\n    query = v;\n  }\n\n}, 9);\nlet parseRequest;\nmodule1.link(\"parseurl\", {\n  default(v) {\n    parseRequest = v;\n  }\n\n}, 10);\nlet basicAuth;\nmodule1.link(\"basic-auth-connect\", {\n  default(v) {\n    basicAuth = v;\n  }\n\n}, 11);\nlet lookupUserAgent;\nmodule1.link(\"useragent\", {\n  lookup(v) {\n    lookupUserAgent = v;\n  }\n\n}, 12);\nlet isModern;\nmodule1.link(\"meteor/modern-browsers\", {\n  isModern(v) {\n    isModern = v;\n  }\n\n}, 13);\nlet send;\nmodule1.link(\"send\", {\n  default(v) {\n    send = v;\n  }\n\n}, 14);\nlet removeExistingSocketFile, registerSocketFileCleanup;\nmodule1.link(\"./socket_file.js\", {\n  removeExistingSocketFile(v) {\n    removeExistingSocketFile = v;\n  },\n\n  registerSocketFileCleanup(v) {\n    registerSocketFileCleanup = v;\n  }\n\n}, 15);\nlet onMessage;\nmodule1.link(\"meteor/inter-process-messaging\", {\n  onMessage(v) {\n    onMessage = v;\n  }\n\n}, 16);\nvar SHORT_SOCKET_TIMEOUT = 5 * 1000;\nvar LONG_SOCKET_TIMEOUT = 120 * 1000;\nconst WebApp = {};\nconst WebAppInternals = {};\nconst hasOwn = Object.prototype.hasOwnProperty; // backwards compat to 2.0 of connect\n\nconnect.basicAuth = basicAuth;\nWebAppInternals.NpmModules = {\n  connect: {\n    version: Npm.require('connect/package.json').version,\n    module: connect\n  }\n}; // Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\n\nWebApp.defaultArch = 'web.browser.legacy'; // XXX maps archs to manifests\n\nWebApp.clientPrograms = {}; // XXX maps archs to program path on filesystem\n\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function (url) {\n  var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function (contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\nfunction shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  } // fallback to standard filter function\n\n\n  return compress.filter(req, res);\n}\n\n; // #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of connect's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a connect `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\n\nvar camelCase = function (name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n\n  for (var i = 1; i < parts.length; ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n\n  return parts.join('');\n};\n\nvar identifyBrowser = function (userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch\n  };\n}; // XXX Refactor as part of implementing real routing.\n\n\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function (req) {\n  return _.extend({\n    browser: identifyBrowser(req.headers['user-agent']),\n    url: parseUrl(req.url, true)\n  }, _.pick(req, 'dynamicHead', 'dynamicBody', 'headers', 'cookies'));\n}; // HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\n\n\nvar htmlAttributeHooks = [];\n\nvar getHtmlAttributes = function (request) {\n  var combinedAttributes = {};\n\n  _.each(htmlAttributeHooks || [], function (hook) {\n    var attributes = hook(request);\n    if (attributes === null) return;\n    if (typeof attributes !== 'object') throw Error(\"HTML attribute hook must return null or object\");\n\n    _.extend(combinedAttributes, attributes);\n  });\n\n  return combinedAttributes;\n};\n\nWebApp.addHtmlAttributeHook = function (hook) {\n  htmlAttributeHooks.push(hook);\n}; // Serve app HTML for this URL?\n\n\nvar appUrl = function (url) {\n  if (url === '/favicon.ico' || url === '/robots.txt') return false; // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n\n  if (url === '/app.manifest') return false; // Avoid serving app HTML for declared routes such as /sockjs/.\n\n  if (RoutePolicy.classify(url)) return false; // we currently return app HTML on all URLs by default\n\n  return true;\n}; // We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\n\nMeteor.startup(function () {\n  function getter(key) {\n    return function (arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key]; // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n\n      return typeof value === \"function\" ? program[key] = value() : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n  WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n  WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n  WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n}); // When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\n\nWebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT); // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n\n  var finishListeners = res.listeners('finish'); // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n\n  res.removeAllListeners('finish');\n  res.on('finish', function () {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n\n  _.each(finishListeners, function (l) {\n    res.on('finish', l);\n  });\n}; // Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\n\n\nvar boilerplateByArch = {}; // Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\n\nconst boilerplateDataCallbacks = Object.create(null);\n\nWebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === \"function\") {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  } // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n\n\n  return previousCallback || null;\n}; // Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous connect middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\n\n\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch).await();\n}\n\nfunction getBoilerplateAsync(request, arch) {\n  const boilerplate = boilerplateByArch[arch];\n  const data = Object.assign({}, boilerplate.baseData, {\n    htmlAttributes: getHtmlAttributes(request)\n  }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n  let madeChanges = false;\n  let promise = Promise.resolve();\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise.then(() => {\n      const callback = boilerplateDataCallbacks[key];\n      return callback(request, data, arch);\n    }).then(result => {\n      // Callbacks should return false if they did not make any changes.\n      if (result !== false) {\n        madeChanges = true;\n      }\n    });\n  });\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers\n  }));\n}\n\nWebAppInternals.generateBoilerplateInstance = function (arch, manifest, additionalOptions) {\n  additionalOptions = additionalOptions || {};\n\n  var runtimeConfig = _.extend(_.clone(__meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || {});\n\n  return new Boilerplate(arch, manifest, _.extend({\n    pathMapper(itemPath) {\n      return pathJoin(archPath[arch], itemPath);\n    },\n\n    baseDataExtension: {\n      additionalStaticJs: _.map(additionalStaticJs || [], function (contents, pathname) {\n        return {\n          pathname: pathname,\n          contents: contents\n        };\n      }),\n      // Convert to a JSON string, then get rid of most weird characters, then\n      // wrap in double quotes. (The outermost JSON.stringify really ought to\n      // just be \"wrap in double quotes\" but we use it to be safe.) This might\n      // end up inside a <script> tag so we need to be careful to not include\n      // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n      // https://github.com/meteor/meteor/issues/3730\n      meteorRuntimeConfig: JSON.stringify(encodeURIComponent(JSON.stringify(runtimeConfig))),\n      rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n      bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n      sriMode: sriMode,\n      inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n      inline: additionalOptions.inline\n    }\n  }, additionalOptions));\n}; // A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\n\n\nWebAppInternals.staticFilesMiddleware = function (staticFilesByArch, req, res, next) {\n  return Promise.asyncApply(() => {\n    if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n      next();\n      return;\n    }\n\n    var pathname = parseRequest(req).pathname;\n\n    try {\n      pathname = decodeURIComponent(pathname);\n    } catch (e) {\n      next();\n      return;\n    }\n\n    var serveStaticJs = function (s) {\n      res.writeHead(200, {\n        'Content-type': 'application/javascript; charset=UTF-8'\n      });\n      res.write(s);\n      res.end();\n    };\n\n    if (_.has(additionalStaticJs, pathname) && !WebAppInternals.inlineScriptsAllowed()) {\n      serveStaticJs(additionalStaticJs[pathname]);\n      return;\n    }\n\n    const {\n      arch,\n      path\n    } = getArchAndPath(pathname, identifyBrowser(req.headers[\"user-agent\"])); // If pauseClient(arch) has been called, program.paused will be a\n    // Promise that will be resolved when the program is unpaused.\n\n    const program = WebApp.clientPrograms[arch];\n    Promise.await(program.paused);\n\n    if (path === \"/meteor_runtime_config.js\" && !WebAppInternals.inlineScriptsAllowed()) {\n      serveStaticJs(`__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`);\n      return;\n    }\n\n    const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n\n    if (!info) {\n      next();\n      return;\n    } // We don't need to call pause because, unlike 'static', once we call into\n    // 'send' and yield to the event loop, we never call another handler with\n    // 'next'.\n    // Cacheable files are files that should never change. Typically\n    // named by their hash (eg meteor bundled js and css files).\n    // We cache them ~forever (1yr).\n\n\n    const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n\n    if (info.cacheable) {\n      // Since we use req.headers[\"user-agent\"] to determine whether the\n      // client should receive modern or legacy resources, tell the client\n      // to invalidate cached resources when/if its user agent string\n      // changes in the future.\n      res.setHeader(\"Vary\", \"User-Agent\");\n    } // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n    // understand.  (The SourceMap header is slightly more spec-correct but FF\n    // doesn't understand it.)\n    //\n    // You may also need to enable source maps in Chrome: open dev tools, click\n    // the gear in the bottom right corner, and select \"enable source maps\".\n\n\n    if (info.sourceMapUrl) {\n      res.setHeader('X-SourceMap', __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl);\n    }\n\n    if (info.type === \"js\" || info.type === \"dynamic js\") {\n      res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n    } else if (info.type === \"css\") {\n      res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n    } else if (info.type === \"json\") {\n      res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n    }\n\n    if (info.hash) {\n      res.setHeader('ETag', '\"' + info.hash + '\"');\n    }\n\n    if (info.content) {\n      res.write(info.content);\n      res.end();\n    } else {\n      send(req, info.absolutePath, {\n        maxage: maxAge,\n        dotfiles: 'allow',\n        // if we specified a dotfile in the manifest, serve it\n        lastModified: false // don't set last-modified based on the file date\n\n      }).on('error', function (err) {\n        Log.error(\"Error serving static file \" + err);\n        res.writeHead(500);\n        res.end();\n      }).on('directory', function () {\n        Log.error(\"Unexpected directory \" + info.absolutePath);\n        res.writeHead(500);\n        res.end();\n      }).pipe(res);\n    }\n  });\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  } // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n\n\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path]; // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n\n      if (typeof info === \"function\") {\n        info = staticFiles[path] = info();\n      }\n\n      return info;\n    } // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n\n\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    } // If getArchAndPath returned an alternate path, try that instead.\n\n\n    if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n  return info;\n}\n\nfunction getArchAndPath(path, browser) {\n  const pathParts = path.split(\"/\");\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith(\"__\")) {\n    const archCleaned = \"web.\" + archKey.slice(2);\n\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n\n      return {\n        arch: archCleaned,\n        path: pathParts.join(\"/\")\n      };\n    }\n  } // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n\n\n  const arch = isModern(browser) ? \"web.browser\" : \"web.browser.legacy\";\n\n  if (hasOwn.call(WebApp.clientPrograms, arch)) {\n    return {\n      arch,\n      path\n    };\n  }\n\n  return {\n    arch: WebApp.defaultArch,\n    path\n  };\n} // Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\n\n\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n\n  return parsedPort;\n};\n\nonMessage(\"webapp-pause-client\", ({\n  arch\n}) => Promise.asyncApply(() => {\n  WebAppInternals.pauseClient(arch);\n}));\nonMessage(\"webapp-reload-client\", ({\n  arch\n}) => Promise.asyncApply(() => {\n  WebAppInternals.generateClientProgram(arch);\n}));\n\nfunction runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._SynchronousQueue();\n\n  var getItemPathname = function (itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = function () {\n    syncQueue.runTask(function () {\n      const staticFilesByArch = Object.create(null);\n      const {\n        configJson\n      } = __meteor_bootstrap__;\n      const clientArchs = configJson.clientArchs || Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error(\"Error reloading the client program: \" + e.stack);\n        process.exit(1);\n      }\n    });\n  }; // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n\n\n  WebAppInternals.pauseClient = function (arch) {\n    syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const {\n        unpause\n      } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === \"function\") {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function () {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = function (arch) {\n    syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(arch, staticFilesByArch = WebAppInternals.staticFilesByArch) {\n    const clientDir = pathJoin(pathDirname(__meteor_bootstrap__.serverDir), arch); // read the control for the client we'll be serving up\n\n    const programJsonPath = pathJoin(clientDir, \"program.json\");\n    let programJson;\n\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === \"ENOENT\") return;\n      throw e;\n    }\n\n    if (programJson.format !== \"web-program-pre1\") {\n      throw new Error(\"Unsupported format for client assets: \" + JSON.stringify(programJson.format));\n    }\n\n    if (!programJsonPath || !clientDir || !programJson) {\n      throw new Error(\"Client config file not parsed.\");\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = staticFilesByArch[arch] = Object.create(null);\n    const {\n      manifest\n    } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === \"client\") {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true\n          };\n        }\n      }\n    });\n    const {\n      PUBLIC_SETTINGS\n    } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS\n    };\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = WebApp.clientPrograms[arch] = {\n      format: \"web-program-pre1\",\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () => WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n      versionRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type === \"css\", configOverrides),\n      versionNonRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type !== \"css\", configOverrides),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS\n    }; // Expose program details as a string reachable via the following URL.\n\n    const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n    const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === \"function\") {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: \"json\"\n      };\n    };\n\n    generateBoilerplateForArch(arch); // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n\n    if (oldProgram && oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  }\n\n  ;\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl()\n      }\n    },\n    \"web.browser\": {\n      runtimeConfigOverrides: {\n        isModern: true\n      }\n    },\n    \"web.browser.legacy\": {\n      runtimeConfigOverrides: {\n        isModern: false\n      }\n    }\n  };\n\n  WebAppInternals.generateBoilerplate = function () {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    syncQueue.runTask(function () {\n      Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const {\n      baseData\n    } = boilerplateByArch[arch] = WebAppInternals.generateBoilerplateInstance(arch, program.manifest, additionalOptions); // We need the runtime config with overrides for meteor_runtime_config.js:\n\n    program.meteorRuntimeConfig = JSON.stringify((0, _objectSpread2.default)({}, __meteor_runtime_config__, additionalOptions.runtimeConfigOverrides || null));\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url)\n    }));\n  }\n\n  WebAppInternals.reloadClientPrograms(); // webserver\n\n  var app = connect(); // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawConnectHandlers.\n\n  var rawConnectHandlers = connect();\n  app.use(rawConnectHandlers); // Auto-compress any json, javascript, or text.\n\n  app.use(compress({\n    filter: shouldCompress\n  })); // parse cookies into an object\n\n  app.use(cookieParser()); // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n\n  app.use(function (req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n\n    res.writeHead(400);\n    res.write(\"Not a proxy\");\n    res.end();\n  }); // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n\n  app.use(query());\n\n  function getPathParts(path) {\n    const parts = path.split(\"/\");\n\n    while (parts[0] === \"\") parts.shift();\n\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return prefix.length <= array.length && prefix.every((part, i) => part === array[i]);\n  } // Strip off the path prefix, if it exists.\n\n\n  app.use(function (request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const {\n      pathname\n    } = parseUrl(request.url); // check if the path in the url starts with the path prefix\n\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n        return next();\n      }\n    }\n\n    if (pathname === \"/favicon.ico\" || pathname === \"/robots.txt\") {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write(\"Unknown path\");\n      response.end();\n      return;\n    }\n\n    next();\n  }); // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n\n  app.use(function (req, res, next) {\n    WebAppInternals.staticFilesMiddleware(WebAppInternals.staticFilesByArch, req, res, next);\n  }); // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n\n  app.use(WebAppInternals.meteorInternalHandlers = connect()); // Packages and apps can add handlers to this via WebApp.connectHandlers.\n  // They are inserted before our default handler.\n\n  var packageAndAppHandlers = connect();\n  app.use(packageAndAppHandlers);\n  var suppressConnectErrors = false; // connect knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n\n  app.use(function (err, req, res, next) {\n    if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n\n    res.writeHead(err.status, {\n      'Content-Type': 'text/plain'\n    });\n    res.end(\"An error message\");\n  });\n  app.use(function (req, res, next) {\n    return Promise.asyncApply(() => {\n      if (!appUrl(req.url)) {\n        return next();\n      } else {\n        var headers = {\n          'Content-Type': 'text/html; charset=utf-8'\n        };\n\n        if (shuttingDown) {\n          headers['Connection'] = 'Close';\n        }\n\n        var request = WebApp.categorizeRequest(req);\n\n        if (request.url.query && request.url.query['meteor_css_resource']) {\n          // In this case, we're requesting a CSS resource in the meteor-specific\n          // way, but we don't have it.  Serve a static css file that indicates that\n          // we didn't have it, so we can detect that and refresh.  Make sure\n          // that any proxies or CDNs don't cache this error!  (Normally proxies\n          // or CDNs are smart enough not to cache error pages, but in order to\n          // make this hack work, we need to return the CSS file as a 200, which\n          // would otherwise be cached.)\n          headers['Content-Type'] = 'text/css; charset=utf-8';\n          headers['Cache-Control'] = 'no-cache';\n          res.writeHead(200, headers);\n          res.write(\".meteor-css-not-found-error { width: 0px;}\");\n          res.end();\n          return;\n        }\n\n        if (request.url.query && request.url.query['meteor_js_resource']) {\n          // Similarly, we're requesting a JS resource that we don't have.\n          // Serve an uncached 404. (We can't use the same hack we use for CSS,\n          // because actually acting on that hack requires us to have the JS\n          // already!)\n          headers['Cache-Control'] = 'no-cache';\n          res.writeHead(404, headers);\n          res.end(\"404 Not Found\");\n          return;\n        }\n\n        if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n          // When downloading files during a Cordova hot code push, we need\n          // to detect if a file is not available instead of inadvertently\n          // downloading the default index page.\n          // So similar to the situation above, we serve an uncached 404.\n          headers['Cache-Control'] = 'no-cache';\n          res.writeHead(404, headers);\n          res.end(\"404 Not Found\");\n          return;\n        }\n\n        const {\n          arch\n        } = getArchAndPath(parseRequest(req).pathname, request.browser); // If pauseClient(arch) has been called, program.paused will be a\n        // Promise that will be resolved when the program is unpaused.\n\n        Promise.await(WebApp.clientPrograms[arch].paused);\n        return getBoilerplateAsync(request, arch).then(({\n          stream,\n          statusCode,\n          headers: newHeaders\n        }) => {\n          if (!statusCode) {\n            statusCode = res.statusCode ? res.statusCode : 200;\n          }\n\n          if (newHeaders) {\n            Object.assign(headers, newHeaders);\n          }\n\n          res.writeHead(statusCode, headers);\n          stream.pipe(res, {\n            // End the response when the stream ends.\n            end: true\n          });\n        }).catch(error => {\n          Log.error(\"Error running template: \" + error.stack);\n          res.writeHead(500, headers);\n          res.end();\n        });\n      }\n    });\n  }); // Return 404 by default, if no other handlers serve this URL.\n\n  app.use(function (req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n  var httpServer = createServer(app);\n  var onListeningCallbacks = []; // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT); // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback); // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  }); // start up app\n\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    rawConnectHandlers: rawConnectHandlers,\n    httpServer: httpServer,\n    connectApp: app,\n    // For testing.\n    suppressConnectErrors: function () {\n      suppressConnectErrors = true;\n    },\n    onListening: function (f) {\n      if (onListeningCallbacks) onListeningCallbacks.push(f);else f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function (httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    }\n  }); // Let the rest of the packages (and Meteor.startup hooks) insert connect\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n\n\n  exports.main = argv => {\n    WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n        if (process.env.METEOR_PRINT_ON_LISTEN) {\n          console.log(\"LISTENING\");\n        }\n\n        const callbacks = onListeningCallbacks;\n        onListeningCallbacks = null;\n        callbacks.forEach(callback => {\n          callback();\n        });\n      }, e => {\n        console.error(\"Error listening:\", e);\n        console.error(e && e.stack);\n      }));\n    };\n\n    let localPort = process.env.PORT || 0;\n    const unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({\n        path: unixSocketPath\n      });\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({\n          path: localPort\n        });\n      } else if (typeof localPort === \"number\") {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || \"0.0.0.0\"\n        });\n      } else {\n        throw new Error(\"Invalid PORT specified\");\n      }\n    }\n\n    return \"DAEMON\";\n  };\n}\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function () {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = function (value) {\n  inlineScriptsAllowed = value;\n  WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = function (use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = function (prefix) {\n  var self = this;\n  self.setBundledJsCssUrlRewriteHook(function (url) {\n    return prefix + url;\n  });\n}; // Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\n\n\nvar additionalStaticJs = {};\n\nWebAppInternals.addStaticJs = function (contents) {\n  additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n}; // Exported for tests\n\n\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs; // Start the server!\n\nrunWebAppServer();","map":{"version":3,"sources":["packages/webapp/webapp_server.js"],"names":["module1","module","export","WebApp","WebAppInternals","assert","link","default","v","readFileSync","createServer","pathJoin","pathDirname","join","dirname","parseUrl","parse","createHash","connect","compress","cookieParser","query","parseRequest","basicAuth","lookupUserAgent","lookup","isModern","send","removeExistingSocketFile","registerSocketFileCleanup","onMessage","SHORT_SOCKET_TIMEOUT","LONG_SOCKET_TIMEOUT","hasOwn","Object","prototype","hasOwnProperty","NpmModules","version","Npm","require","defaultArch","clientPrograms","archPath","bundledJsCssUrlRewriteHook","url","bundledPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","sha1","contents","hash","update","digest","shouldCompress","req","res","headers","filter","camelCase","name","parts","split","toLowerCase","i","length","charAt","toUpperCase","substr","identifyBrowser","userAgentString","userAgent","family","major","minor","patch","categorizeRequest","_","extend","browser","pick","htmlAttributeHooks","getHtmlAttributes","request","combinedAttributes","each","hook","attributes","Error","addHtmlAttributeHook","push","appUrl","RoutePolicy","classify","Meteor","startup","getter","key","arch","program","value","calculateClientHash","clientHash","calculateClientHashRefreshable","calculateClientHashNonRefreshable","getRefreshableAssets","_timeoutAdjustmentRequestCallback","setTimeout","finishListeners","listeners","removeAllListeners","on","l","boilerplateByArch","boilerplateDataCallbacks","create","registerBoilerplateDataCallback","callback","previousCallback","strictEqual","getBoilerplate","getBoilerplateAsync","await","boilerplate","data","assign","baseData","htmlAttributes","madeChanges","promise","Promise","resolve","keys","forEach","then","result","stream","toHTMLStream","statusCode","generateBoilerplateInstance","manifest","additionalOptions","runtimeConfig","clone","runtimeConfigOverrides","Boilerplate","pathMapper","itemPath","baseDataExtension","additionalStaticJs","map","pathname","meteorRuntimeConfig","JSON","stringify","encodeURIComponent","rootUrlPathPrefix","sriMode","inlineScriptsAllowed","inline","staticFilesMiddleware","staticFilesByArch","next","method","decodeURIComponent","e","serveStaticJs","s","writeHead","write","end","has","path","getArchAndPath","paused","info","getStaticFileInfo","maxAge","cacheable","setHeader","sourceMapUrl","type","content","absolutePath","maxage","dotfiles","lastModified","err","Log","error","pipe","originalPath","call","staticArchList","archIndex","indexOf","unshift","splice","some","staticFiles","finalize","pathParts","archKey","startsWith","archCleaned","slice","parsePort","port","parsedPort","parseInt","Number","isNaN","pauseClient","generateClientProgram","runWebAppServer","shuttingDown","syncQueue","_SynchronousQueue","getItemPathname","itemUrl","reloadClientPrograms","runTask","configJson","__meteor_bootstrap__","clientArchs","clientPaths","stack","process","exit","unpause","clientDir","serverDir","programJsonPath","programJson","code","format","item","where","sourceMap","PUBLIC_SETTINGS","configOverrides","oldProgram","newProgram","WebAppHashing","versionRefreshable","versionNonRefreshable","cordovaCompatibilityVersions","manifestUrlPrefix","replace","manifestUrl","Package","autoupdate","AUTOUPDATE_VERSION","Autoupdate","autoupdateVersion","env","generateBoilerplateForArch","defaultOptionsForArch","DDP_DEFAULT_CONNECTION_URL","MOBILE_DDP_URL","absoluteUrl","ROOT_URL","MOBILE_ROOT_URL","generateBoilerplate","refreshableAssets","css","file","app","rawConnectHandlers","use","isValidUrl","getPathParts","shift","isPrefixOf","prefix","array","every","part","response","pathPrefix","prefixParts","meteorInternalHandlers","packageAndAppHandlers","suppressConnectErrors","status","newHeaders","catch","httpServer","onListeningCallbacks","socket","destroyed","message","destroy","connectHandlers","connectApp","onListening","f","startListening","listenOptions","cb","listen","exports","main","argv","startHttpServer","bindEnvironment","METEOR_PRINT_ON_LISTEN","console","log","callbacks","localPort","PORT","unixSocketPath","UNIX_SOCKET_PATH","test","host","BIND_IP","setInlineScriptsAllowed","enableSubresourceIntegrity","use_credentials","setBundledJsCssUrlRewriteHook","hookFn","setBundledJsCssPrefix","self","addStaticJs"],"mappings":"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","sourcesContent":["import assert from \"assert\";\nimport { readFileSync } from \"fs\";\nimport { createServer } from \"http\";\nimport {\n  join as pathJoin,\n  dirname as pathDirname,\n} from \"path\";\nimport { parse as parseUrl } from \"url\";\nimport { createHash } from \"crypto\";\nimport { connect } from \"./connect.js\";\nimport compress from \"compression\";\nimport cookieParser from \"cookie-parser\";\nimport query from \"qs-middleware\";\nimport parseRequest from \"parseurl\";\nimport basicAuth from \"basic-auth-connect\";\nimport { lookup as lookupUserAgent } from \"useragent\";\nimport { isModern } from \"meteor/modern-browsers\";\nimport send from \"send\";\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\n\nvar SHORT_SOCKET_TIMEOUT = 5*1000;\nvar LONG_SOCKET_TIMEOUT = 120*1000;\n\nexport const WebApp = {};\nexport const WebAppInternals = {};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// backwards compat to 2.0 of connect\nconnect.basicAuth = basicAuth;\n\nWebAppInternals.NpmModules = {\n  connect: {\n    version: Npm.require('connect/package.json').version,\n    module: connect,\n  }\n};\n\n// Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\nWebApp.defaultArch = 'web.browser.legacy';\n\n// XXX maps archs to manifests\nWebApp.clientPrograms = {};\n\n// XXX maps archs to program path on filesystem\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function (url) {\n  var bundledPrefix =\n     __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function (contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\n function shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n\n  // fallback to standard filter function\n  return compress.filter(req, res);\n};\n\n// #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of connect's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a connect `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n\n\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\nvar camelCase = function (name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n  for (var i = 1;  i < parts.length;  ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n  return parts.join('');\n};\n\nvar identifyBrowser = function (userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch\n  };\n};\n\n// XXX Refactor as part of implementing real routing.\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function (req) {\n  return _.extend({\n    browser: identifyBrowser(req.headers['user-agent']),\n    url: parseUrl(req.url, true)\n  }, _.pick(req, 'dynamicHead', 'dynamicBody', 'headers', 'cookies'));\n};\n\n// HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\nvar htmlAttributeHooks = [];\nvar getHtmlAttributes = function (request) {\n  var combinedAttributes  = {};\n  _.each(htmlAttributeHooks || [], function (hook) {\n    var attributes = hook(request);\n    if (attributes === null)\n      return;\n    if (typeof attributes !== 'object')\n      throw Error(\"HTML attribute hook must return null or object\");\n    _.extend(combinedAttributes, attributes);\n  });\n  return combinedAttributes;\n};\nWebApp.addHtmlAttributeHook = function (hook) {\n  htmlAttributeHooks.push(hook);\n};\n\n// Serve app HTML for this URL?\nvar appUrl = function (url) {\n  if (url === '/favicon.ico' || url === '/robots.txt')\n    return false;\n\n  // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n  if (url === '/app.manifest')\n    return false;\n\n  // Avoid serving app HTML for declared routes such as /sockjs/.\n  if (RoutePolicy.classify(url))\n    return false;\n\n  // we currently return app HTML on all URLs by default\n  return true;\n};\n\n\n// We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\nMeteor.startup(function () {\n  function getter(key) {\n    return function (arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key];\n      // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n      return typeof value === \"function\"\n        ? program[key] = value()\n        : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n  WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n  WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n  WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n});\n\n\n\n// When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\nWebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT);\n  // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n  var finishListeners = res.listeners('finish');\n  // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n  res.removeAllListeners('finish');\n  res.on('finish', function () {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n  _.each(finishListeners, function (l) { res.on('finish', l); });\n};\n\n\n// Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\nvar boilerplateByArch = {};\n\n// Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\nconst boilerplateDataCallbacks = Object.create(null);\nWebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === \"function\") {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  }\n\n  // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n  return previousCallback || null;\n};\n\n// Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous connect middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch).await();\n}\n\nfunction getBoilerplateAsync(request, arch) {\n  const boilerplate = boilerplateByArch[arch];\n  const data = Object.assign({}, boilerplate.baseData, {\n    htmlAttributes: getHtmlAttributes(request),\n  }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n\n  let madeChanges = false;\n  let promise = Promise.resolve();\n\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise.then(() => {\n      const callback = boilerplateDataCallbacks[key];\n      return callback(request, data, arch);\n    }).then(result => {\n      // Callbacks should return false if they did not make any changes.\n      if (result !== false) {\n        madeChanges = true;\n      }\n    });\n  });\n\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers,\n  }));\n}\n\nWebAppInternals.generateBoilerplateInstance = function (arch,\n                                                        manifest,\n                                                        additionalOptions) {\n  additionalOptions = additionalOptions || {};\n\n  var runtimeConfig = _.extend(\n    _.clone(__meteor_runtime_config__),\n    additionalOptions.runtimeConfigOverrides || {}\n  );\n\n  return new Boilerplate(arch, manifest, _.extend({\n    pathMapper(itemPath) {\n      return pathJoin(archPath[arch], itemPath);\n    },\n    baseDataExtension: {\n      additionalStaticJs: _.map(\n        additionalStaticJs || [],\n        function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }\n      ),\n      // Convert to a JSON string, then get rid of most weird characters, then\n      // wrap in double quotes. (The outermost JSON.stringify really ought to\n      // just be \"wrap in double quotes\" but we use it to be safe.) This might\n      // end up inside a <script> tag so we need to be careful to not include\n      // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n      // https://github.com/meteor/meteor/issues/3730\n      meteorRuntimeConfig: JSON.stringify(\n        encodeURIComponent(JSON.stringify(runtimeConfig))),\n      rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n      bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n      sriMode: sriMode,\n      inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n      inline: additionalOptions.inline\n    }\n  }, additionalOptions));\n};\n\n// A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\nWebAppInternals.staticFilesMiddleware = async function (\n  staticFilesByArch,\n  req,\n  res,\n  next,\n) {\n  if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n    next();\n    return;\n  }\n  var pathname = parseRequest(req).pathname;\n  try {\n    pathname = decodeURIComponent(pathname);\n  } catch (e) {\n    next();\n    return;\n  }\n\n  var serveStaticJs = function (s) {\n    res.writeHead(200, {\n      'Content-type': 'application/javascript; charset=UTF-8'\n    });\n    res.write(s);\n    res.end();\n  };\n\n  if (_.has(additionalStaticJs, pathname) &&\n              ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(additionalStaticJs[pathname]);\n    return;\n  }\n\n  const { arch, path } = getArchAndPath(\n    pathname,\n    identifyBrowser(req.headers[\"user-agent\"]),\n  );\n\n  // If pauseClient(arch) has been called, program.paused will be a\n  // Promise that will be resolved when the program is unpaused.\n  const program = WebApp.clientPrograms[arch];\n  await program.paused;\n\n  if (path === \"/meteor_runtime_config.js\" &&\n      ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(`__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`);\n    return;\n  }\n\n  const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n  if (! info) {\n    next();\n    return;\n  }\n\n  // We don't need to call pause because, unlike 'static', once we call into\n  // 'send' and yield to the event loop, we never call another handler with\n  // 'next'.\n\n  // Cacheable files are files that should never change. Typically\n  // named by their hash (eg meteor bundled js and css files).\n  // We cache them ~forever (1yr).\n  const maxAge = info.cacheable\n    ? 1000 * 60 * 60 * 24 * 365\n    : 0;\n\n  if (info.cacheable) {\n    // Since we use req.headers[\"user-agent\"] to determine whether the\n    // client should receive modern or legacy resources, tell the client\n    // to invalidate cached resources when/if its user agent string\n    // changes in the future.\n    res.setHeader(\"Vary\", \"User-Agent\");\n  }\n\n  // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n  // understand.  (The SourceMap header is slightly more spec-correct but FF\n  // doesn't understand it.)\n  //\n  // You may also need to enable source maps in Chrome: open dev tools, click\n  // the gear in the bottom right corner, and select \"enable source maps\".\n  if (info.sourceMapUrl) {\n    res.setHeader('X-SourceMap',\n                  __meteor_runtime_config__.ROOT_URL_PATH_PREFIX +\n                  info.sourceMapUrl);\n  }\n\n  if (info.type === \"js\" ||\n      info.type === \"dynamic js\") {\n    res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n  } else if (info.type === \"css\") {\n    res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n  } else if (info.type === \"json\") {\n    res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n  }\n\n  if (info.hash) {\n    res.setHeader('ETag', '\"' + info.hash + '\"');\n  }\n\n  if (info.content) {\n    res.write(info.content);\n    res.end();\n  } else {\n    send(req, info.absolutePath, {\n      maxage: maxAge,\n      dotfiles: 'allow', // if we specified a dotfile in the manifest, serve it\n      lastModified: false // don't set last-modified based on the file date\n    }).on('error', function (err) {\n      Log.error(\"Error serving static file \" + err);\n      res.writeHead(500);\n      res.end();\n    }).on('directory', function () {\n      Log.error(\"Unexpected directory \" + info.absolutePath);\n      res.writeHead(500);\n      res.end();\n    }).pipe(res);\n  }\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (! hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  }\n\n  // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path];\n      // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n      if (typeof info === \"function\") {\n        info = staticFiles[path] = info();\n      }\n      return info;\n    }\n\n    // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    }\n\n    // If getArchAndPath returned an alternate path, try that instead.\n    if (path !== originalPath &&\n        hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n\n  return info;\n}\n\nfunction getArchAndPath(path, browser) {\n  const pathParts = path.split(\"/\");\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith(\"__\")) {\n    const archCleaned = \"web.\" + archKey.slice(2);\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n      return {\n        arch: archCleaned,\n        path: pathParts.join(\"/\"),\n      };\n    }\n  }\n\n  // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n  const arch = isModern(browser)\n    ? \"web.browser\"\n    : \"web.browser.legacy\";\n\n  if (hasOwn.call(WebApp.clientPrograms, arch)) {\n    return { arch, path };\n  }\n\n  return {\n    arch: WebApp.defaultArch,\n    path,\n  };\n}\n\n// Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n  return parsedPort;\n}\n\nimport { onMessage } from \"meteor/inter-process-messaging\";\n\nonMessage(\"webapp-pause-client\", async ({ arch }) => {\n  WebAppInternals.pauseClient(arch);\n});\n\nonMessage(\"webapp-reload-client\", async ({ arch }) => {\n  WebAppInternals.generateClientProgram(arch);\n});\n\nfunction runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._SynchronousQueue();\n\n  var getItemPathname = function (itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = function () {\n    syncQueue.runTask(function() {\n      const staticFilesByArch = Object.create(null);\n\n      const { configJson } = __meteor_bootstrap__;\n      const clientArchs = configJson.clientArchs ||\n        Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error(\"Error reloading the client program: \" + e.stack);\n        process.exit(1);\n      }\n    });\n  };\n\n  // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n  WebAppInternals.pauseClient = function (arch) {\n    syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const { unpause } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === \"function\") {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function () {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = function (arch) {\n    syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(\n    arch,\n    staticFilesByArch = WebAppInternals.staticFilesByArch,\n  ) {\n    const clientDir = pathJoin(\n      pathDirname(__meteor_bootstrap__.serverDir),\n      arch,\n    );\n\n    // read the control for the client we'll be serving up\n    const programJsonPath = pathJoin(clientDir, \"program.json\");\n\n    let programJson;\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === \"ENOENT\") return;\n      throw e;\n    }\n\n    if (programJson.format !== \"web-program-pre1\") {\n      throw new Error(\"Unsupported format for client assets: \" +\n                      JSON.stringify(programJson.format));\n    }\n\n    if (! programJsonPath || ! clientDir || ! programJson) {\n      throw new Error(\"Client config file not parsed.\");\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = staticFilesByArch[arch] = Object.create(null);\n\n    const { manifest } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === \"client\") {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true\n          };\n        }\n      }\n    });\n\n    const { PUBLIC_SETTINGS } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS,\n    };\n\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = WebApp.clientPrograms[arch] = {\n      format: \"web-program-pre1\",\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () => WebAppHashing.calculateClientHash(\n        manifest, null, configOverrides),\n      versionRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, type => type === \"css\", configOverrides),\n      versionNonRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, type => type !== \"css\", configOverrides),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS,\n    };\n\n    // Expose program details as a string reachable via the following URL.\n    const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n    const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION =\n            Package.autoupdate.Autoupdate.autoupdateVersion\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === \"function\") {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: \"json\"\n      };\n    };\n\n    generateBoilerplateForArch(arch);\n\n    // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n    if (oldProgram &&\n        oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  };\n\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL ||\n          Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL ||\n          Meteor.absoluteUrl()\n      }\n    },\n\n    \"web.browser\": {\n      runtimeConfigOverrides: {\n        isModern: true,\n      }\n    },\n\n    \"web.browser.legacy\": {\n      runtimeConfigOverrides: {\n        isModern: false,\n      }\n    },\n  };\n\n  WebAppInternals.generateBoilerplate = function () {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    syncQueue.runTask(function() {\n      Object.keys(WebApp.clientPrograms)\n        .forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const { baseData } = boilerplateByArch[arch] =\n      WebAppInternals.generateBoilerplateInstance(\n        arch,\n        program.manifest,\n        additionalOptions,\n      );\n    // We need the runtime config with overrides for meteor_runtime_config.js:\n    program.meteorRuntimeConfig = JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || null),\n    });\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url),\n    }));\n  }\n\n  WebAppInternals.reloadClientPrograms();\n\n  // webserver\n  var app = connect();\n\n  // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawConnectHandlers.\n  var rawConnectHandlers = connect();\n  app.use(rawConnectHandlers);\n\n  // Auto-compress any json, javascript, or text.\n  app.use(compress({filter: shouldCompress}));\n\n  // parse cookies into an object\n  app.use(cookieParser());\n\n  // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n  app.use(function(req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n    res.writeHead(400);\n    res.write(\"Not a proxy\");\n    res.end();\n  });\n\n  // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n  app.use(query());\n\n  function getPathParts(path) {\n    const parts = path.split(\"/\");\n    while (parts[0] === \"\") parts.shift();\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return prefix.length <= array.length &&\n      prefix.every((part, i) => part === array[i]);\n  }\n\n  // Strip off the path prefix, if it exists.\n  app.use(function (request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const { pathname } = parseUrl(request.url);\n\n    // check if the path in the url starts with the path prefix\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n        return next();\n      }\n    }\n\n    if (pathname === \"/favicon.ico\" ||\n        pathname === \"/robots.txt\") {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write(\"Unknown path\");\n      response.end();\n      return;\n    }\n\n    next();\n  });\n\n  // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n  app.use(function (req, res, next) {\n    WebAppInternals.staticFilesMiddleware(\n      WebAppInternals.staticFilesByArch,\n      req, res, next\n    );\n  });\n\n  // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n  app.use(WebAppInternals.meteorInternalHandlers = connect());\n\n  // Packages and apps can add handlers to this via WebApp.connectHandlers.\n  // They are inserted before our default handler.\n  var packageAndAppHandlers = connect();\n  app.use(packageAndAppHandlers);\n\n  var suppressConnectErrors = false;\n  // connect knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n  app.use(function (err, req, res, next) {\n    if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n    res.writeHead(err.status, { 'Content-Type': 'text/plain' });\n    res.end(\"An error message\");\n  });\n\n  app.use(async function (req, res, next) {\n    if (! appUrl(req.url)) {\n      return next();\n\n    } else {\n      var headers = {\n        'Content-Type': 'text/html; charset=utf-8'\n      };\n\n      if (shuttingDown) {\n        headers['Connection'] = 'Close';\n      }\n\n      var request = WebApp.categorizeRequest(req);\n\n      if (request.url.query && request.url.query['meteor_css_resource']) {\n        // In this case, we're requesting a CSS resource in the meteor-specific\n        // way, but we don't have it.  Serve a static css file that indicates that\n        // we didn't have it, so we can detect that and refresh.  Make sure\n        // that any proxies or CDNs don't cache this error!  (Normally proxies\n        // or CDNs are smart enough not to cache error pages, but in order to\n        // make this hack work, we need to return the CSS file as a 200, which\n        // would otherwise be cached.)\n        headers['Content-Type'] = 'text/css; charset=utf-8';\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(200, headers);\n        res.write(\".meteor-css-not-found-error { width: 0px;}\");\n        res.end();\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_js_resource']) {\n        // Similarly, we're requesting a JS resource that we don't have.\n        // Serve an uncached 404. (We can't use the same hack we use for CSS,\n        // because actually acting on that hack requires us to have the JS\n        // already!)\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n        // When downloading files during a Cordova hot code push, we need\n        // to detect if a file is not available instead of inadvertently\n        // downloading the default index page.\n        // So similar to the situation above, we serve an uncached 404.\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      const { arch } = getArchAndPath(\n        parseRequest(req).pathname,\n        request.browser,\n      );\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      await WebApp.clientPrograms[arch].paused;\n\n      return getBoilerplateAsync(request, arch).then(({\n        stream,\n        statusCode,\n        headers: newHeaders,\n      }) => {\n        if (!statusCode) {\n          statusCode = res.statusCode ? res.statusCode : 200;\n        }\n\n        if (newHeaders) {\n          Object.assign(headers, newHeaders);\n        }\n\n        res.writeHead(statusCode, headers);\n\n        stream.pipe(res, {\n          // End the response when the stream ends.\n          end: true,\n        });\n\n      }).catch(error => {\n        Log.error(\"Error running template: \" + error.stack);\n        res.writeHead(500, headers);\n        res.end();\n      });\n    }\n  });\n\n  // Return 404 by default, if no other handlers serve this URL.\n  app.use(function (req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n\n\n  var httpServer = createServer(app);\n  var onListeningCallbacks = [];\n\n  // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n  // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  });\n\n  // start up app\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    rawConnectHandlers: rawConnectHandlers,\n    httpServer: httpServer,\n    connectApp: app,\n    // For testing.\n    suppressConnectErrors: function () {\n      suppressConnectErrors = true;\n    },\n    onListening: function (f) {\n      if (onListeningCallbacks)\n        onListeningCallbacks.push(f);\n      else\n        f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function (httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    },\n  });\n\n  // Let the rest of the packages (and Meteor.startup hooks) insert connect\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n  exports.main = argv => {\n    WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n        if (process.env.METEOR_PRINT_ON_LISTEN) {\n          console.log(\"LISTENING\");\n        }\n        const callbacks = onListeningCallbacks;\n        onListeningCallbacks = null;\n        callbacks.forEach(callback => { callback(); });\n      }, e => {\n        console.error(\"Error listening:\", e);\n        console.error(e && e.stack);\n      }));\n    };\n\n    let localPort = process.env.PORT || 0;\n    const unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({ path: unixSocketPath });\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({ path: localPort });\n      } else if (typeof localPort === \"number\") {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || \"0.0.0.0\"\n        });\n      } else {\n        throw new Error(\"Invalid PORT specified\");\n      }\n    }\n\n    return \"DAEMON\";\n  };\n}\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function () {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = function (value) {\n  inlineScriptsAllowed = value;\n  WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = function(use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = function (prefix) {\n  var self = this;\n  self.setBundledJsCssUrlRewriteHook(\n    function (url) {\n      return prefix + url;\n  });\n};\n\n// Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\nvar additionalStaticJs = {};\nWebAppInternals.addStaticJs = function (contents) {\n  additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n};\n\n// Exported for tests\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs;\n\n// Start the server!\nrunWebAppServer();\n"]},"sourceType":"script","hash":"ec22f0e00f91d94b6f293425e7ba61acdb272d84"}
